name: CMake CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        compiler: [gcc, clang, msvc, windows-clang]
        build_type: [Debug, Release]

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: actions/setup-cmake@v3
        with:
          cmake-version: '3.15'

      - name: Install Dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install make cmake

      - name: Set up Compiler (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          if [[ "${{ matrix.compiler }}" == "gcc" ]]; then
            sudo apt-get install -y gcc
          elif [[ "${{ matrix.compiler }}" == "clang" ]]; then
            sudo apt-get install -y clang
          fi

      - name: Set up Compiler (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if [[ "${{ matrix.compiler }}" == "msvc" ]]; then
            echo "Using MSVC"
          elif [[ "${{ matrix.compiler }}" == "windows-clang" ]]; then
            choco install llvm
          fi

      - name: Configure Test Project
        run: |
          mkdir build_test
          cd build_test
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_C_COMPILER=${{ matrix.compiler }} ../test

      - name: Build and Run Tests
        run: |
          cd build_test
          cmake --build .
          ctest --output-on-failure
